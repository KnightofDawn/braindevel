{
    extends: ['configs/experiments/defaults.yaml'],
    templates: {
        fb_net_layers: [ 
           &in_layer !obj:lasagne.layers.InputLayer {
                    shape: [null, in_sensors, in_rows, in_cols]
                },
            &spat_conv !obj:lasagne.layers.Conv2DLayer {
                incoming: *in_layer,
                num_filters: 80,
                filter_size: [1, 1],
                nonlinearity: !!python/name:theano.tensor.sqr ,
                name: 'spat_conv',
            },
            &pool !obj:braindecode.veganlasagne.pool.GlobalPoolLayerAxisWise {
                incoming: *spat_conv,
                axis: 2,
                pool_function: !!python/name:theano.tensor.sum ,
            },
            &log !obj:lasagne.layers.NonlinearityLayer {
                incoming: *pool,
                nonlinearity: !!python/name:theano.tensor.log ,
            },
            &drop_feature !obj:lasagne.layers.DropoutLayer {
                incoming: *log,
                p: 0.5,
            },
            &final_dense !obj:lasagne.layers.DenseLayer {
                    incoming: *drop_feature,
                    num_units: 4,
                    nonlinearity: !!python/name:lasagne.nonlinearities.softmax ,
                    name: 'final_dense',
            },
        ],
        fb_set: !obj:braindecode.datasets.filterbank.FilterbankCleanSignalMatrix {
            signal_processor: !obj:braindecode.datasets.signal_processor.SignalProcessor {
                set_loader: !obj:braindecode.datasets.loaders.BCICompetition4Set2A {
                    filename: $dataset_filename
                },
                segment_ival: [$trial_start, $trial_stop],
                cnt_preprocessors: [
                    [
                        !!python/name:braindecode.mywyrm.processing.resample_cnt , 
                        {'newfs': $resample_fs},
                    ],
                    [
                        !!python/name:braindecode.mywyrm.processing.highpass_cnt , 
                        {'low_cut_off_hz': $low_cut_off_hz}
                    ],
                ],
            },
            cleaner: !obj:braindecode.mywyrm.clean.NoCleaner { },
            sensor_names: $sensor_names,
            min_freq: $min_freq,
            max_freq: $max_freq,
            last_low_freq: $last_low_freq,
            low_width: 2,
            high_width: 6,
        },
        fb_layer_names_to_norms: {
            spat_conv: 2.0,
            final_dense: 0.5         
        },
    },
    variants: [[{
        layer_names_to_norms: [$fb_layer_names_to_norms],
        trial_start: [500],
        trial_stop: [4000],
        sensor_names: ["null"],
        layers: [$fb_net_layers],
        dataset: [$fb_set],
        max_increasing_epochs: [150],
        max_epochs: [1500],
        low_cut_off_hz: [0.5],
    }]]
}
