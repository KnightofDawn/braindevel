{
    extends: ['configs/experiments/raw_set.yaml'],
    templates: {
        raw_net_avg_layers: [ 
           &in_layer !obj:lasagne.layers.InputLayer {
                shape: [null, in_sensors, in_rows, in_cols]
            },
            &shuffle !obj:lasagne.layers.DimshuffleLayer {
                incoming: *in_layer,
                pattern: [0,3,2,1],
            },
            &time_conv !obj:lasagne.layers.Conv2DLayer {
                incoming: *shuffle,
                num_filters: $n_time_filters,
                filter_size: [$filter_time_length, 1],
                nonlinearity: !!python/name:lasagne.nonlinearities.identity ,
                name: 'time_conv',
            },
            &drop_time !obj:lasagne.layers.DropoutLayer {
                incoming: *time_conv,
                p: 0.5,
            },
            &spat_conv !obj:braindecode.veganlasagne.layers.Conv2DAllColsLayer {
                incoming: *drop_time,
                num_filters: $n_spat_filters,
                filter_size: [1, -1],
                nonlinearity: !!python/name:theano.tensor.sqr ,
                name: 'spat_conv',
            },
            &pool !obj:braindecode.veganlasagne.pool.SumPool2dLayer {
                    incoming: *spat_conv,
                    pool_size: [$pool_time_length,1],
                    stride: [$pool_time_stride,1],
                    mode: 'average_exc_pad',
            },
            &log !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *pool,
                    nonlinearity: !!python/name:theano.tensor.log ,
            },
            &drop_feature !obj:lasagne.layers.DropoutLayer {
                incoming: *log,
                p: 0.5,
            },
            &final_conv !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature,
                num_filters: 4,
                filter_size: [$final_time_regions, 1],
                nonlinearity: !!python/name:lasagne.nonlinearities.identity ,
                name: 'final_conv',
            },
            &avg_layer !obj:lasagne.layers.GlobalPoolLayer {
                incoming: *final_conv,
                pool_function: !!python/name:theano.tensor.mean ,
            },
            &softmax !obj:lasagne.layers.NonlinearityLayer {
                incoming: *avg_layer,
                nonlinearity: !!python/name:lasagne.nonlinearities.softmax ,
            },
        ],
        raw_layer_names_to_norms: {
            time_conv: 2.0,
            spat_conv: 2.0,
            final_conv: 2.0,
        }
    },
    variants: [[{
        n_time_filters: [40],
        n_spat_filters: [40],
        final_time_regions: [22],
        layer_names_to_norms: [$raw_layer_names_to_norms],
        layers: [$raw_net_avg_layers],
    }]]
}
