{
    templates: {
        online_chan_freq_wise: !obj:braindecode.datasets.preprocessing.OnlineAxiswiseStandardize {
            axis: ['c', 1]
        },
        categorical_crossentropy: !!python/name:lasagne.objectives.categorical_crossentropy ,
        adam: !!python/name:lasagne.updates.adam ,
        C_sensors: ['FC5', 'FC1', 'FC2', 'FC6', 'C3', 'Cz', 'C4', 'CP5',
            'CP1', 'CP2', 'CP6', 'FC3', 'FCz', 'FC4', 'C5', 'C1', 'C2', 'C6',
            'CP3', 'CPz', 'CP4', 'FFC5h', 'FFC3h', 'FFC4h', 'FFC6h', 'FCC5h',
            'FCC3h', 'FCC4h', 'FCC6h', 'CCP5h', 'CCP3h', 'CCP4h', 'CCP6h', 'CPP5h',
            'CPP3h', 'CPP4h', 'CPP6h', 'FFC1h', 'FFC2h', 'FCC1h', 'FCC2h', 'CCP1h',
         'CCP2h', 'CPP1h', 'CPP2h'],
         single_fold_splitter: !obj:braindecode.datasets.dataset_splitters.DatasetSingleFoldSplitter {
                num_folds: $num_folds, 
                i_test_fold: $i_test_fold,
            },
        balanced_batch_iterator: !obj:braindecode.datasets.batch_iteration.BalancedBatchIterator {
            batch_size: $batch_size,
        },
        monitors: [
                !obj:braindecode.veganlasagne.monitors.LossMonitor {},
                $misclass_monitor,
                !obj:braindecode.veganlasagne.monitors.RuntimeMonitor {},
            ],
        default_misclass: !obj:braindecode.veganlasagne.monitors.MisclassMonitor {},
    },
    variants: [[{
            monitors: [$monitors],
            misclass_monitor: [$default_misclass],
            iterator: [$balanced_batch_iterator],
            dataset_splitter: [$single_fold_splitter],
            batch_size: [60],
            preprocessor: [$online_chan_freq_wise],
            loss_var_func: [$categorical_crossentropy],
            updates_var_func: [$adam],
            num_folds: [10],
            i_test_fold: [-1], # test fold => last fold
    }]]
}