 {
    extends: ['configs/experiments/defaults.yaml',
        'configs/experiments/paper/shallow_square.yaml',
        'configs/experiments/raw_set.yaml',
        #'configs/experiments/raw_net_no_drop_time.yaml',
        'configs/experiments/4sec_movements/dry_32_sensors/filenames.yaml',
        'configs/experiments/4sec_movements/windows/windows.yaml'],
   templates: {
      cnt_standardize:  [[
            !!python/name:braindecode.mywyrm.processing.exponential_standardize_cnt , 
            {},
        ],
        ],
        test_raw_set: !obj:braindecode.datasets.raw.CleanSignalMatrix {
            signal_processor: !obj:braindecode.datasets.signal_processor.SignalProcessor {
                set_loader: !obj:braindecode.datasets.loaders.$loader_type {
                    filename: $test_dataset_filename,
                    load_sensor_names: $load_sensor_names,
                },
                segment_ival: [$trial_start, $trial_stop],
                cnt_preprocessors: $cnt_preprocessors,
                marker_def: $marker_def,
            },
            cleaner: $cleaner,
            sensor_names: $sensor_names,
        },
        combined_set: !obj:braindecode.datasets.combined.CombinedSet {
            sets: [$raw_set, $test_raw_set],
        },
        several_sets_splitter: !obj:braindecode.datahandling.splitters.SeveralSetsSplitter {
            use_test_as_valid: $use_test_as_valid,
        },
   }, 
    variants: [[
    {
        final_dense_length: [1],
        num_filters: [40],
        input_time_length: [2000],
        layer_modifier: [TransformToNormalNet],
        use_test_as_valid: [true],
        dataset: [$combined_set],
        dataset_splitter: [$several_sets_splitter],
        test_dataset_filename: ['data/four-sec-dry-32-sensors/MaVoMuSc_dryEEG32S003.BBCI.mat'],
        low_cut_off_hz: [0.5],
        n_samples_per_window: [512],
        n_sample_stride: [50],
        save_path: ['data/models/4sec-movements/windows/dry-32-sensors/train-test/'],
        sensor_names: ["null"],
        cnt_preprocessors: [$cnt_standardize],
        filter_time_length: [40],
        pool_time_length: [200],
        pool_time_stride: [40],
        max_increasing_epochs: [50],
        max_epochs: [100],
        preprocessor: ["null"],
    }
    ]]
}
