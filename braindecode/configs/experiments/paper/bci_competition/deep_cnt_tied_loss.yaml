 {
    extends: [
        'configs/experiments/paper/defaults.yaml',
        'configs/experiments/paper/bci_competition/files_train_test.yaml',
        'configs/experiments/paper/cnt.yaml',
        'configs/experiments/paper/4_layer_no_nin_avg.yaml',
        ], 
    templates: {
        tied_loss: !obj:braindecode.util.FuncAndArgs {
            func: !!python/name:braindecode.veganlasagne.objectives.sum_of_losses ,
            loss_expressions: [$categorical_crossentropy,
                !obj:braindecode.util.FuncAndArgs { 
                    func: !!python/name:braindecode.veganlasagne.objectives.tied_losses_cnt_model ,
                    n_pairs: $n_tied_pairs,
                },
            ]
        },
        tied_neighbours: !obj:braindecode.util.FuncAndArgs {
            func: !!python/name:braindecode.veganlasagne.objectives.sum_of_losses ,
            loss_expressions: [$categorical_crossentropy,
                !!python/name:braindecode.veganlasagne.objectives.tied_neighbours_cnt_model ,
            ]
        },
    },
    variants: [[
    {
        save_path: ['data/models/paper/bci-competition/cnt/deep4-tied-loss/'],
        input_time_length: [1000],
        n_sample_preds : [500], # will be overwritten anyways
        train_cleaner: [$no_cleaner],
        test_cleaner: [$no_cleaner],
        filter_time_length: [10],
        filter_length_2: [10],
        filter_length_3: [10],
        filter_length_4: [10],
        final_dense_length: [2],
        trial_stop: [4000],
        num_filters_time: [25],
        num_filters_spat: [25],
        num_filters_2: [50],
        num_filters_3: [100],
        num_filters_4: [200],
        drop_in_prob: [0.,0.1],
        trial_start: [1500],
        variants: [[
        {
            loss_expression: [$tied_neighbours],
        },
        {
            loss_expression: [$tied_loss],
            n_tied_pairs: [1,10,100],
        },
        ]],
    }
    ]]
}
