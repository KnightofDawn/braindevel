{
    templates: {
        raw_set_train: !obj:braindecode.datasets.raw.CleanSignalMatrix {
            signal_processor: !obj:braindecode.datasets.signal_processor.SignalProcessor {
                set_loader: !obj:braindecode.datasets.loaders.$loader_type {
                    filename: $dataset_filename,
                    load_sensor_names: $load_sensor_names,
                },
                segment_ival: [$trial_start, $trial_stop],
                cnt_preprocessors: $cnt_preprocessors,
                marker_def: $marker_def,
            },
            cleaner: $cleaner,
            sensor_names: $sensor_names,
            unsupervised_preprocessor: $unsupervised_preprocessor,
        },
        raw_set_test: !obj:braindecode.datasets.raw.CleanSignalMatrix {
            signal_processor: !obj:braindecode.datasets.signal_processor.SignalProcessor {
                set_loader: !obj:braindecode.datasets.loaders.$loader_type {
                    filename: $test_filename,
                    load_sensor_names: $load_sensor_names,
                },
                segment_ival: [$trial_start, $trial_stop],
                cnt_preprocessors: $cnt_preprocessors,
                marker_def: $marker_def,
            },
            cleaner: $cleaner,
            sensor_names: $sensor_names,
            unsupervised_preprocessor: $unsupervised_preprocessor,
        },
        # standard monitors, replicated here for consistency with cnt 
        # (both now do not use misclass_monitor param)
        trial_monitors: [
                !obj:braindecode.veganlasagne.monitors.LossMonitor {},
                !obj:braindecode.veganlasagne.monitors.MisclassMonitor {},
                !obj:braindecode.veganlasagne.monitors.RuntimeMonitor {},
        ],
    },
    variants: [[{
        monitors: [$trial_monitors],
        unsupervised_preprocessor: ['null'],
        cleaner: [$no_cleaner],
        layer_modifier: [TransformToNormalNet],
        load_sensor_names: ['null'],
        max_increasing_epochs: [160],
        max_epochs: [1600],
        input_time_length: [2000], # will be overwritten by actual net size...
    }]]
}
