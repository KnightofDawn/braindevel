{
    extends: ['configs/experiments/defaults.yaml'],
    templates: {
        raw_net_layers: [ 
           &in_layer !obj:lasagne.layers.InputLayer {
                shape: [null, in_sensors, in_rows, in_cols]
            },
            &shuffle !obj:lasagne.layers.DimshuffleLayer {
                incoming: *in_layer,
                pattern: [0,3,2,1],
            },
            &time_conv !obj:lasagne.layers.Conv2DLayer {
                incoming: *shuffle,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: !!python/name:lasagne.nonlinearities.identity ,
            },
            &drop_time !obj:lasagne.layers.DropoutLayer {
                incoming: *time_conv,
                p: 0.5,
            },
            &spat_conv !obj:braindecode.veganlasagne.layers.Conv2DAllColsLayer {
                incoming: *drop_time,
                num_filters: 40,
                filter_size: [1, -1],
                nonlinearity: !!python/name:theano.tensor.sqr ,
            },
            &pool !obj:braindecode.veganlasagne.pool.SumPool2dLayer {
                    incoming: *spat_conv,
                    pool_size: [50,1],
                    stride: [10,1],
                    mode: 'average_exc_pad',
            },
            &log !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *pool,
                    nonlinearity: !!python/name:theano.tensor.log ,
            },
            &drop_feature !obj:lasagne.layers.DropoutLayer {
                incoming: *log,
                p: 0.5,
            },
            &softmax !obj:lasagne.layers.DenseLayer {
                    incoming: *drop_feature,
                    num_units: 4,
                    nonlinearity: !!python/name:lasagne.nonlinearities.softmax ,
            },
        ],
        raw_set: !obj:braindecode.datasets.bbci_pylearn_dataset.BBCIPylearnCleanDataset {
            signal_marker_set: !obj:braindecode.datasets.bbci_dataset.ProcessedDataset {
                wyrm_set: !obj:braindecode.datasets.bbci_dataset.BBCIDataset {
                    filename: $dataset_filename
                },
                cnt_preprocessors: [
                    [
                        !!python/name:braindecode.mywyrm.processing.resample_cnt , 
                        {'newfs': $resample_fs},
                    ],
                    [
                        !!python/name:braindecode.mywyrm.processing.highpass_cnt , 
                        {'low_cut_off_hz': 0.5}
                    ],
                ]
            },
            cleaner: !obj:braindecode.mywyrm.clean.$cleaner { 
                eog_set: !obj:braindecode.datasets.bbci_dataset.ProcessedDataset {
                    wyrm_set: !obj:braindecode.datasets.bbci_dataset.BBCIDataset {
                        filename: $dataset_filename,
                        load_sensor_names: ['EOGh', 'EOGv']
                    },
                }
            },
            sensor_names: $sensor_names,
        },
    },
    variants: [[{
        cleaner: [BBCISetCleaner],
        save_path: ['data/models/rawnet-all-classes/'],
        sensor_names: [$C_sensors],
        layers: [$raw_net_layers],
        dataset: [$raw_set],
        max_increasing_epochs: [150],
        max_epochs: [1500],
        filter_time_length: [15],
        resample_fs: [150],
        dataset_filename: [
            'data/BBCI-without-last-runs/AnWeMoSc1S001R01_ds10_1-12.BBCI.mat',
            'data/BBCI-without-last-runs/BhNoMoSc1S001R01_ds10_1-12.BBCI.mat',
            'data/BBCI-without-last-runs/FaMaMoSc1S001R01_ds10_1-14.BBCI.mat',
            'data/BBCI-without-last-runs/FrThMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/GuJoMoSc01S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/JoBeMoSc01S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/KaUsMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/LaKaMoSc1S001R01_ds10_1-9.BBCI.mat',
            'data/BBCI-without-last-runs/MaGlMoSc2S001R01_ds10_1-12.BBCI.mat',
            'data/BBCI-without-last-runs/MaJaMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/MaVoMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/NaMaMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/OlIlMoSc01S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/PiWiMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/RoBeMoSc03S001R01_ds10_1-9.BBCI.mat',
            'data/BBCI-without-last-runs/RoScMoSc1S001R01_ds10_1-11.BBCI.mat',
            'data/BBCI-without-last-runs/StHeMoSc01S001R01_ds10_1-10.BBCI.mat',
            'data/BBCI-without-last-runs/SvMuMoSc1S001R01_ds10_1-12.BBCI.mat',
        ],
    }]]
}
