{
    templates: {
        raw_net_no_drop_time_layers: [ 
           &in_layer !obj:lasagne.layers.InputLayer {
                shape: [null, in_sensors, $input_time_length, in_cols]
            },
            &shuffle !obj:lasagne.layers.DimshuffleLayer {
                incoming: *in_layer,
                pattern: [0,3,2,1],
            },
            &time_conv !obj:lasagne.layers.Conv2DLayer {
                incoming: *shuffle,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: !!python/name:lasagne.nonlinearities.identity ,
                name: 'time_conv',
            },
            &spat_conv !obj:braindecode.veganlasagne.layers.Conv2DAllColsLayer {
                incoming: *time_conv,
                num_filters: 40,
                filter_size: [1, -1],
                nonlinearity: $first_nonlin,
                name: 'spat_conv',
            },
            &pool !obj:braindecode.veganlasagne.pool.$first_pool_layer {
                    incoming: *spat_conv,
                    pool_size: [$pool_time_length,1],
                    stride: [1,1],
                    mode: $first_pool_mode,
            },
            &reshape_pool !obj:braindecode.veganlasagne.layers.StrideReshapeLayer {
                    incoming: *pool,
                    n_stride: $pool_time_stride,
            },
            &log_1 !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *reshape_pool,
                    nonlinearity: $first_pool_nonlin ,
            },
            &drop_feature_1 !obj:lasagne.layers.DropoutLayer {
                incoming: *log_1,
                p: 0.5,
            },
            
            &combined_conv_2 !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature_1,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: $later_nonlin ,
                name: 'combined_conv_2',
            },
            &pool_2 !obj:braindecode.veganlasagne.pool.$pool_layers {
                    incoming: *combined_conv_2,
                    pool_size: [$pool_time_length,1],
                    stride: [1,1],
                    mode: $pool_mode,
            },
            &reshape_pool_2 !obj:braindecode.veganlasagne.layers.StrideReshapeLayer {
                    incoming: *pool_2,
                    n_stride: $pool_time_stride,
            },
            &log_2 !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *reshape_pool_2,
                    nonlinearity: $later_pool_nonlin ,
            },
            &drop_feature_2 !obj:lasagne.layers.DropoutLayer {
                incoming: *log_2,
                p: 0.5,
            },
            &combined_conv_3 !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature_2,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: $later_nonlin ,
                name: 'combined_conv_3',
            },
            &pool_3 !obj:braindecode.veganlasagne.pool.$pool_layers {
                    incoming: *combined_conv_3,
                    pool_size: [$pool_time_length,1],
                    stride: [1,1],
                    mode: $pool_mode,
            },
            &reshape_pool_3 !obj:braindecode.veganlasagne.layers.StrideReshapeLayer {
                    incoming: *pool_3,
                    n_stride: $pool_time_stride,
            },
            &log_3 !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *reshape_pool_3,
                    nonlinearity: $later_pool_nonlin ,
            },
            &drop_feature_3 !obj:lasagne.layers.DropoutLayer {
                incoming: *log_3,
                p: 0.5,
            },
            &combined_conv_4 !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature_3,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: $later_nonlin ,
                name: 'combined_conv_4',
            },
            &pool_4 !obj:braindecode.veganlasagne.pool.$pool_layers {
                    incoming: *combined_conv_4,
                    pool_size: [$pool_time_length,1],
                    stride: [1,1],
                    mode: $pool_mode,
            },
            &reshape_pool_4 !obj:braindecode.veganlasagne.layers.StrideReshapeLayer {
                    incoming: *pool_4,
                    n_stride: $pool_time_stride,
            },
            &log_4 !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *reshape_pool_4,
                    nonlinearity: $later_pool_nonlin ,
            },
            &drop_feature_4 !obj:lasagne.layers.DropoutLayer {
                incoming: *log_4,
                p: 0.5,
            },
            &combined_conv_5 !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature_4,
                num_filters: 40,
                filter_size: [$filter_time_length, 1],
                nonlinearity: $later_nonlin ,
                name: 'combined_conv_5',
            },
            &pool_5 !obj:braindecode.veganlasagne.pool.$pool_layers {
                    incoming: *combined_conv_5,
                    pool_size: [$pool_time_length,1],
                    stride: [1,1],
                    mode: $pool_mode,
            },
            &reshape_pool_5 !obj:braindecode.veganlasagne.layers.StrideReshapeLayer {
                    incoming: *pool_5,
                    n_stride: $pool_time_stride,
            },
            &log_5 !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *reshape_pool_5,
                    nonlinearity: $later_pool_nonlin ,
            },
            &drop_feature_5 !obj:lasagne.layers.DropoutLayer {
                incoming: *log_5,
                p: 0.5,
            },
            &final_dense !obj:lasagne.layers.Conv2DLayer {
                incoming: *drop_feature_5,
                num_filters: 6,
                filter_size: [$final_dense_length, 1],
                nonlinearity: !!python/name:lasagne.nonlinearities.identity ,
                name: 'final_dense',
            },
            &final_reshape !obj:braindecode.veganlasagne.layers.FinalReshapeLayer {
                    incoming: *final_dense,
            },
            &final_sigmoid !obj:lasagne.layers.NonlinearityLayer {
                    incoming: *final_reshape,
                    nonlinearity: !!python/name:lasagne.nonlinearities.sigmoid ,
            },
        ],
        raw_layer_names_to_norms: {
            time_conv: 2.0,
            spat_conv: 2.0,
            combined_conv_2: 2.0,
            combined_conv_3: 2.0,
            combined_conv_4: 2.0,
            combined_conv_5: 2.0,
            final_dense: 0.5,
        },
        square: !!python/name:theano.tensor.sqr ,
        identity: !!python/name:lasagne.nonlinearities.identity ,
        relu: !!python/name:lasagne.nonlinearities.rectify ,
        leaky_relu: !!python/name:lasagne.nonlinearities.leaky_rectify ,
        safe_log: !!python/name:braindecode.veganlasagne.nonlinearities.safe_log ,
    },
    variants: [[{
        layer_names_to_norms: [$raw_layer_names_to_norms],
        layers: [$raw_net_no_drop_time_layers],
    }]]
}
