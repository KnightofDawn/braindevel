 {
        layers: $layers,
        original_params: $original_params,
        save_path: $save_path,
        dataset: &dataset $dataset,
        preprocessor: &preprocessor $preprocessor,
        preprocessed_provider: &preprocessed_provider !obj:braindecode.datasets.dataset_splitters.PreprocessedSplitter {
            dataset_splitter: !obj:braindecode.datasets.dataset_splitters.DatasetSingleFoldSplitter {
                dataset: *dataset, 
                num_folds: 10, 
                i_test_fold: 9,
            },
            preprocessor: *preprocessor,
        },
        dataset_provider: $dataset_provider,
        exp_args: {
            loss_var_func: $loss_var_func,
            updates_var_func: $updates_var_func,
            batch_iter_func: !!python/name:braindecode.datasets.batch_iteration.get_balanced_batches ,
            monitors: [
                !obj:braindecode.veganlasagne.monitors.LossMonitor {},
                !obj:braindecode.veganlasagne.monitors.MisclassMonitor {},
                !obj:braindecode.veganlasagne.monitors.RuntimeMonitor {},
            ],
            stop_criterion: !obj:braindecode.veganlasagne.stopping.Or {
                stop_criteria: [
                    !obj:braindecode.veganlasagne.stopping.NoDecrease {
                        chan_name: valid_misclass,
                        num_epochs: $max_increasing_epochs,
                        min_decrease: 0.,
                    },
                    !obj:braindecode.veganlasagne.stopping.MaxEpochs {
                        num_epochs: $max_epochs,
                    },
                ]
            },
        },
}
