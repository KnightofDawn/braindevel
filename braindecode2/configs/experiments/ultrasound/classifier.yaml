{
    extends: ['configs/experiments/ultrasound/defaults.yaml'],
    templates: {
        four_conv_pool_b: !obj:braindecode.ultrasound.models.dilated.FourConvPoolBDilated {
            img_rows: $img_rows,
            img_cols: $img_cols,
            conv_nonlin: $conv_nonlin,
            n_start_filters: $n_start_filters,
            n_increase_filter_factor: $n_increase_filter_factor,
            batch_norm: $batch_norm,
        },
        five_2_conv_pool: !obj:braindecode.ultrasound.models.dilated.Five2ConvPoolDilated {
                img_rows: $img_rows,
                img_cols: $img_cols,
                conv_nonlin: $conv_nonlin,
                n_start_filters: $n_start_filters,
                n_increase_filter_factor: $n_increase_filter_factor,
                batch_norm: $batch_norm,
        },
        class_monitors: [
                !obj:braindecode.veganlasagne.monitors.LossMonitor {},
                !obj:braindecode.ultrasound.monitors.TwoClassMisclassMonitor {},
                !obj:braindecode.veganlasagne.monitors.RuntimeMonitor {},
        ],
        binary_cross_entropy: !!python/name:lasagne.objectives.binary_crossentropy ,
        classifier: !obj:braindecode.ultrasound.classifier.AddClassifier {
            network: $network,
            hidden_nonlin: $hidden_nonlin,
        },
        identity: !!python/name:lasagne.nonlinearities.identity ,
        elu: !!python/name:lasagne.nonlinearities.elu ,
        relu: !!python/name:lasagne.nonlinearities.rectify ,
        mask_to_class: !obj:braindecode.ultrasound.preprocessing.MaskToClass { },
    },
    variants: [[{
        save_path: ['data/models/ultrasound/classifier/'],
        n_start_filters: [32],
        n_increase_filter_factor: [1.5],
        preprocessor: [$mask_to_class],
        loss_expression: [$binary_cross_entropy],
        monitors: [$class_monitors],
        layers: [$classifier],
        max_epochs: [100],
        max_increasing_epochs: [90],
        l2_factor: [0.],
        conv_nonlin: [$relu], # maybe try elu later?
        hidden_nonlin: [$relu],
        network: [$five_2_conv_pool, $four_conv_pool_b], 
        elastic_fraction: [0.,0.25],
        set_faulty_masks_empty: [True],
        replace_faulty_masks: [False], 
        use_test_as_valid: [True],
        elastic_only_inputs: [True],
        variants: [[{
            #max_epochs: [10],
            conv_nonlin: [$elu],
            hidden_nonlin: [$elu],
            elastic_fraction: [0.],
        },
        {}
        ]],
        ignore_unused: [['border_factor', 'low_pred_loss_cut', 'mask_factor',
        'imbalance_factor', 'l2_factor', 'load_sensor_names','sensor_names'
        ]],
    }]]  
}
